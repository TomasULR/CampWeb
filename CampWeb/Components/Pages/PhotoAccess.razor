@page "/fotky/{AccessCode?}"
@using CampWeb.Models
@using CampWeb.Services
@inject ITimelineService TimelineService
@inject IJSRuntime JSRuntime

<PageTitle>Fotky z tábora</PageTitle>

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10">

            @if (!isAuthenticated)
            {
                <!-- Přihlášení kódem -->
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <h1 class="h5 mb-2">Fotky z tábora</h1>
                        <p class="text-muted mb-4">Zadejte přístupový kód, který jste obdrželi od organizátorů.</p>

                        <div class="d-flex flex-column flex-sm-row gap-2 justify-content-center">
                            <input class="form-control form-control-lg text-center"
                                   style="max-width: 360px; letter-spacing: 2px;"
                                   placeholder="Přístupový kód"
                                   @bind="inputAccessCode"
                                   @onkeypress="HandleKeyPress"/>

                            <button class="btn btn-primary btn-lg"
                                    disabled="@isValidating"
                                    @onclick="ValidateAccessCode">
                                @if (isValidating)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                Přihlásit
                            </button>
                        </div>

                        @if (showError)
                        {
                            <div class="alert alert-danger mt-3 mb-0">@errorMessage</div>
                        }
                    </div>
                </div>
            }
            else
            {
                <!-- Toolbar -->
                <div class="d-flex flex-wrap justify-content-between align-items-center mb-4 gap-2">
                    <div>
                        <h2 class="h5 mb-0">@(!string.IsNullOrWhiteSpace(campName) ? campName : "Tábor") –
                            fotogalerie</h2>
                        <div class="text-muted small">Přístupový kód: <strong>@AccessCode</strong></div>
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-secondary" @onclick="RefreshData" disabled="@isLoading">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm me-2"></span>
                            }
                            Obnovit
                        </button>
                        <button class="btn btn-primary" @onclick="DownloadAll" disabled="@(!photos.Any())">
                            Stáhnout vše
                        </button>
                    </div>
                </div>

                <!-- Živé zprávy -->
                @if (liveUpdates?.Any() == true)
                {
                    <div class="card border-0 shadow-sm mb-4">
                        <div class="card-header bg-white">
                            <strong>Živé zprávy</strong>
                        </div>
                        <div class="card-body">
                            @foreach (var update in liveUpdates.Take(3))
                            {
                                <div class="mb-3">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <h6 class="mb-1">@update.Title</h6>
                                        <small
                                            class="text-muted">@update.CreatedAt.ToLocalTime().ToString("dd.MM. HH:mm")</small>
                                    </div>
                                    @if (!string.IsNullOrWhiteSpace(update.Content))
                                    {
                                        <p class="mb-2">@update.Content</p>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(update.PhotoUrl))
                                    {
                                        <img src="@update.PhotoUrl"
                                             alt="Foto"
                                             loading="lazy"
                                             class="img-fluid rounded cursor-pointer"
                                             style="max-height:220px"
                                             @onclick="() => OpenLightbox(update.PhotoUrl)"/>
                                    }
                                </div>
                                @if (update != liveUpdates.Take(3).Last())
                                {
                                    <hr class="my-3"/>
                                }
                            }
                        </div>
                    </div>
                }

                <!-- Galerie -->
                @if (photos?.Any() == true)
                {
                    <div class="row g-3">
                        @foreach (var photo in photos)
                        {
                            <div class="col-6 col-md-4 col-lg-3">
                                <div class="photo-item">
                                    <img src="@photo.FilePath"
                                         alt="@photo.Description"
                                         loading="lazy"
                                         class="img-fluid rounded cursor-pointer"
                                         @onclick="() => OpenLightbox(photo.FilePath)"/>
                                    <div class="d-flex justify-content-between align-items-center mt-2">
                                        <div class="me-2">
                                            @if (!string.IsNullOrWhiteSpace(photo.Description))
                                            {
                                                <div class="small text-muted text-truncate" title="@photo.Description">
                                                    @photo.Description
                                                </div>
                                            }
                                            <small
                                                class="text-muted">@photo.UploadDate.ToLocalTime().ToString("dd.MM.yyyy")</small>
                                        </div>
                                        <!-- Jednotlivé stažení bez JS -->
                                        <a class="btn btn-sm btn-outline-primary" title="Stáhnout"
                                           href="@photo.FilePath" download>
                                            <i class="fas fa-download"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center text-muted py-5">
                        <i class="fas fa-camera fs-1 mb-3"></i>
                        <div>Zatím žádné fotky</div>
                    </div>
                }
            }
        </div>
    </div>
</div>

<!-- Lehký lightbox bez JS knihoven -->
@if (lightboxOpen && !string.IsNullOrEmpty(selectedPhoto))
{
    <div class="lightbox-backdrop" @onclick="CloseLightbox">
        <div class="lightbox-dialog" @onclick:stopPropagation="true">
            <button type="button" class="btn-close btn-close-white lightbox-close" @onclick="CloseLightbox"
                    aria-label="Zavřít"></button>
            <img src="@selectedPhoto" alt="Foto" class="img-fluid rounded" style="max-height:80vh; max-width:100%;"/>
        </div>
    </div>
}

@code {
    [Parameter] public string? AccessCode { get; set; }

    private string inputAccessCode = "";
    private bool isAuthenticated = false;
    private bool isValidating = false;
    private bool isLoading = false;
    private bool showError = false;
    private string errorMessage = "";
    private string campName = "";

    private List<CampPhoto> photos = new();
    private List<LiveUpdate> liveUpdates = new();

// Lightbox
    private bool lightboxOpen = false;
    private string selectedPhoto = "";

    protected override async Task OnParametersSetAsync()
    {
// Přímý vstup s /fotky/{code}
        if (!string.IsNullOrWhiteSpace(AccessCode) && !isAuthenticated)
        {
            inputAccessCode = AccessCode!;
            await ValidateAccessCode();
        }
    }

    private async Task ValidateAccessCode()
    {
        showError = false;
        errorMessage = "";
        isValidating = true;
        StateHasChanged();

        try
        {
            var code = (inputAccessCode ?? "").Trim().ToUpperInvariant();
            if (string.IsNullOrWhiteSpace(code))
            {
                showError = true;
                errorMessage = "Zadejte prosím přístupový kód.";
                return;
            }

            isLoading = true;

// Tyto metody v TimelineService podporují kód registrace i kód tábora.
            var tempPhotos = await TimelineService.GetPhotosByAccessCodeAsync(code);
            var tempUpdates = await TimelineService.GetUpdatesByAccessCodeAsync(code);

            if ((tempPhotos?.Any() == true) || (tempUpdates?.Any() == true))
            {
                isAuthenticated = true;
                AccessCode = code;

                photos = (tempPhotos ?? new()).OrderByDescending(p => p.UploadDate).ToList();
                liveUpdates = (tempUpdates ?? new()).OrderByDescending(u => u.CreatedAt).ToList();

                campName = photos.FirstOrDefault()?.Camp?.Name
                           ?? liveUpdates.FirstOrDefault()?.Camp?.Name
                           ?? "Tábor";
            }
            else
            {
                isAuthenticated = false;
                showError = true;
                errorMessage = "Neplatný přístupový kód, nebo zatím nejsou k dispozici žádné fotky.";
            }
        }
        catch
        {
            showError = true;
            errorMessage = "Nastala neočekávaná chyba. Zkuste to prosím znovu.";
        }
        finally
        {
            isValidating = false;
            isLoading = false;
        }
    }

    private async Task RefreshData()
    {
        if (!string.IsNullOrWhiteSpace(AccessCode))
        {
            await ValidateAccessCode();
        }
    }

    private void HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            _ = ValidateAccessCode();
        }
    }

    private void OpenLightbox(string url)
    {
        selectedPhoto = url;
        lightboxOpen = true;
    }

    private void CloseLightbox()
    {
        lightboxOpen = false;
        selectedPhoto = "";
    }

    private async Task DownloadAll()
    {
        if (!photos.Any()) return;
        var urls = photos.Select(p => p.FilePath).ToArray();
        await JSRuntime.InvokeVoidAsync("photoAccess_downloadMany", urls);
    }

}

<style>
    .cursor-pointer {
        cursor: pointer;
    }

    .photo-item img {
        width: 100%;
        height: auto;
        display: block;
    }

    /* Lightbox */
    .lightbox-backdrop {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, .7);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1050;
    }

    .lightbox-dialog {
        position: relative;
        padding: 0.5rem;
    }

    .lightbox-close {
        position: absolute;
        top: 8px;
        right: 8px;
        filter: invert(1);
    }
</style>

<!-- Pomocné funkce jen pro tuto stránku (bez externích knihoven) -->
<script>
    window.photoAccess_downloadFile ??= function (url) {
        try {
            const a = document.createElement('a');
            a.href = url;
            a.download = '';
            document.body.appendChild(a);
            a.click();
            a.remove();
        } catch { /* ignore */
        }
    };
    window.photoAccess_downloadMany ??= async function (urls) {
        for (const u of urls || []) {
            window.photoAccess_downloadFile(u);
            await new Promise(r => setTimeout(r, 120));
        }
    };
</script>
