@page "/tabor/{id:int}"
@using CampWeb.Models
@using CampWeb.Services
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject ICampService CampService
@inject ILogger<CampDetail> Logger
@rendermode InteractiveServer

<PageTitle>Detail tábora</PageTitle>

<div class="container mt-4">
    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Načítání...</span>
            </div>
        </div>
    }
    else if (camp == null)
    {
        <div class="alert alert-warning">
            <h4>Tábor nenalezen</h4>
            <p>Požadovaný tábor nebyl nalezen v databázi.</p>
            <a href="/tabory" class="btn btn-primary">Zpět na seznam táborů</a>
        </div>
    }
    else
    {
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Domů</a></li>
                <li class="breadcrumb-item"><a href="/tabory">Tábory</a></li>
                <li class="breadcrumb-item active" aria-current="page">@camp.Name</li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-lg-8">
                <h1 class="mb-3">@camp.Name</h1>
                <p class="lead">@camp.ShortDescription</p>

                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">O táboru</h5>
                        <p>@camp.Description</p>

                        @if (camp.Activities?.Any() == true)
                        {
                            <h6 class="mt-4">Program zahrnuje:</h6>
                            <ul>
                                @foreach (var activity in camp.Activities)
                                {
                                    <li>@activity</li>
                                }
                            </ul>
                        }
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Lokace</h5>
                        <p><i class="fas fa-map-marker-alt"></i> @camp.Location</p>
                        <div id="campMap" style="height: 300px; border-radius: 10px;"></div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card sticky-top" style="top: 20px;">
                    <div class="card-body">
                        <h5 class="card-title">Informace o táboru</h5>

                        <div class="mb-3">
                            <strong>Typ tábora:</strong><br/>
                            <span class="badge bg-info">@GetCampTypeLabel(camp.Type)</span>
                        </div>

                        <div class="mb-3">
                            <strong>Termín:</strong><br/>
                            @camp.StartDate.ToString("d. M. yyyy") - @camp.EndDate.ToString("d. M. yyyy")
                        </div>

                        <div class="mb-3">
                            <strong>Věková kategorie:</strong><br/>
                            @camp.AgeGroup let
                        </div>

                        <div class="mb-3">
                            <strong>Cena:</strong><br/>
                            <span class="h4 text-primary">@camp.Price.ToString("N0") Kč</span> / týden
                        </div>

                        <div class="mb-3">
                            <strong>Volná místa:</strong><br/>
                            @if (camp.AvailableSpots == 0)
                            {
                                <span class="badge bg-danger">Obsazeno</span>
                            }
                            else if (camp.AvailableSpots <= 5)
                            {
                                <span class="badge bg-warning">Poslední @camp.AvailableSpots místa</span>
                            }
                            else
                            {
                                <span class="badge bg-success">@camp.AvailableSpots volných míst</span>
                            }
                        </div>

                        <button class="btn btn-primary w-100 mb-2" @onclick="RegisterForCamp"
                                disabled="@(camp.AvailableSpots == 0)">
                            <i class="fas fa-user-plus"></i> Přihlásit se
                        </button>

                        <button class="btn btn-outline-primary w-100" @onclick="ContactUs">
                            <i class="fas fa-envelope"></i> Kontaktovat nás
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }

    private Camp? camp;
    private bool isLoading = true;
    private bool mapInitialized = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadCampDataAsync();
    }

    private async Task LoadCampDataAsync()
    {
        isLoading = true;

        try
        {
            Logger.LogInformation("Loading camp data for ID: {CampId}", Id);
            camp = await CampService.GetCampByIdAsync(Id);
            
            if (camp != null)
            {
                Logger.LogInformation("Successfully loaded camp: {CampName}", camp.Name);
            }
            else
            {
                Logger.LogWarning("Camp not found with ID: {CampId}", Id);
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading camp data for ID: {CampId}", Id);
            camp = null;
        }
        finally
        {
            isLoading = false;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && camp != null && !mapInitialized)
        {
            try
            {
                // Inicializace mapy pro konkrétní tábor
                await JSRuntime.InvokeVoidAsync("initializeCampMap", camp.Latitude, camp.Longitude, camp.Name);
                mapInitialized = true;
                Logger.LogInformation("Map initialized for camp: {CampName}", camp.Name);
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "Error initializing map for camp: {CampName}", camp?.Name);
            }
        }
    }

    private void RegisterForCamp()
    {
        Navigation.NavigateTo($"/registrace?campId={Id}");
    }

    private void ContactUs()
    {
        Navigation.NavigateTo($"/kontakt?subject=Dotaz k táboru: {camp?.Name}");
    }

    private string GetCampTypeLabel(string type)
    {
        return type switch
        {
            "sport" => "⚽ Sportovní",
            "adventure" => "🏔️ Dobrodružný",
            "creative" => "🎨 Kreativní",
            "science" => "🔬 Vědecký",
            "water" => "🏊 Vodní",
            _ => "🏕️ Tábor"
        };
    }
}